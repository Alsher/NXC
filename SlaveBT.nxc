                          // Slave Brick

#include "NXCDefs.h"
#define connection 1
#define OutputBox 1
#define InputBox 5
#define OutputBox2 2
#define InputBox2 4


void BluetoothCheck(int conn){                                    // makes sure the bluetooth connection is presistent/ existing
    if (!BluetoothStatus(conn)==NO_ERR)
    {
    TextOut(5,LCD_LINE2,"Error, no connection");
    Wait(1000);
    Stop(true);
    }
}

void move(int move)
{
 int move2;
 move2 = move;
 int power;
 
 string presplit = NumToStr(move);

 string split1 = SubStr(presplit, 0, 1);
 string split2 = SubStr(presplit, 1, 2);
 
 int aftersplit1 = StrToNum(split1);
 int aftersplit2 = StrToNum(split2);
 
 if(move2 == 1)
 {power = 0;}
 if(move2 == 0)
 {power = 50;}
 
 /*OnFwd(OUT_BC, power);
 OnRev(OUT_A, power);*/
 
 TextOut(0, LCD_LINE5, "Splited: ");
 NumOut(LCD_LINE2, LCD_LINE5, aftersplit1);
 NumOut(LCD_LINE1, LCD_LINE5, aftersplit2);
 ClearLine(LCD_LINE4);

}


task main(){
int in;


BluetoothCheck(0);

TextOut(5,LCD_LINE1,"Slave receiving");
SendResponseNumber(OutputBox,0xFF); //unblock master

while(true)
  {

            if(ReceiveRemoteNumber(InputBox,true,in) != STAT_MSG_EMPTY_MAILBOX)
            {

            TextOut(0,LCD_LINE3,"In:");
            move(in);


            NumOut(20,LCD_LINE3,in);

            SendResponseNumber(OutputBox,0xFF);
            }




//Wait(5); //take breath (optional)

  }
}
